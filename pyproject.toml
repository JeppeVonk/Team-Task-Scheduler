[build-system]
requires = [
    "poetry-core"
]
build-backend = "poetry.core.masonry.api"

[project]
name = "task_planner"
version = "0.2.3"
dependencies = [
    "pandas >=2.3.1,<3.0",
    "openpyxl >=3.1.3,<4.0"
]
requires-python = ">=3.13,<4.0"
authors = [
    { name = "Shuttle", email = "shutt1e@outlook.com" }
]
maintainers = [
    { name = "Shuttle", email = "shutt1e@outlook.com" }
]
description = "Task Scheduler for Sports Teams"
readme = "README.md"
license = "MIT"
keywords = [

]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business",
    "Topic :: Utilities"
]

[project.urls]
Homepage = "https://github.com/JeppeVonk/Team-Task-Scheduler.git"
Repository = "https://github.com/JeppeVonk/Team-Task-Scheduler.git"
Issues = "https://github.com/JeppeVonk/Team-Task-Scheduler/issues"
Changelog = "https://github.com/JeppeVonk/Team-Task-Scheduler/blob/main/CHANGELOG.md"

[project.scripts]
task_planner = "task_planner.__main__:main"

[tool.poetry]
packages = [
    { include = "task_planner" }
]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
mypy = "^1.15.0"
black = "^25.1.0"
ruff = "^0.11.8"
commitizen = "^4.6.0"
pre-commit = "^4.2.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.1.1"

[tool.commitizen]
name = "cz_conventional_commits"
version_provider = "pep621"
version_scheme = "semver2"
tag_format = "v$version"
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"
major_version_zero = true

[tool.mypy]
python_version = "3.13"
strict = true
ignore_missing_imports = true
namespace_packages = true
show_error_code_links = true
pretty = true
explicit_package_bases = true
mypy_path = "task_planner"

[tool.black]
line-length = 80
target-version = [
    "py313"
]
include = '\.pyi?$'
exclude = '''
/(
        \.git
    |   \.mypy_cache
    |   \.pytest_cache
    |   \.venv
    |   build
    |   dist
    |   data
    |   docs
)/
'''

[tool.ruff]
line-length = 80
target-version = "py313"
src = [
    "task_planner",
    "tests"
]
extend-exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "build",
    "dist",
    "data",
    "docs"
]
extend-select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "B"     # flake8-bugbear
]
ignore = [
    "E501"  # Line length handled by Black
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra --strict-markers --tb=short --cov=task_planner --cov-report term-missing --cov-report html:htmlcov"
testpaths = [
    "tests"
]
python_files = [
    "test_*.py",
    "*_test.py"
]
python_classes = [
    "Test*"
]
python_functions = [
    "test_*"
]
